grammar TomlRB::Document
  include TomlRB::Primitive

  rule document
    (comment | table_array | table | keyvalue | line_break)*
  end

  rule table_array
    (space? '[[' stripped_key ']]' comment?) <TomlRB::TableArrayParser>
  end

  rule table
    (space? '[' stripped_key ']' comment?) <TomlRB::TableParser>
  end

  rule keyvalue
    (stripped_key '=' space? v:(toml_values) comment? space) <TomlRB::KeyvalueParser>
  end

  ### Values

  rule inline_table
    (space? '{' (keyvalue? (',' keyvalue)*)? space? '}' ) <TomlRB::InlineTableParser>
  end

  rule array
    ("[" array_comments (array_elements)? space ","? array_comments "]" indent?) <TomlRB::ArrayParser>
  end

  rule array_array
    (array (space "," array_comments array)*) {
      captures[:array].map(&:value)
    }
  end

  rule array_elements
    (toml_values (indent? "," array_comments toml_values)*) {
      captures[:toml_values].map(&:value).map do |v|
        v.respond_to?(:value) ? v.value : v
      end
    }
  end

  ### Helpers

  rule stripped_key
    (space? key space?) { captures[:key].first.value }
  end

  rule array_comments
    (indent? (comment indent?)*)
  end

  rule toml_values
    primitive | inline_table | array
  end
end
